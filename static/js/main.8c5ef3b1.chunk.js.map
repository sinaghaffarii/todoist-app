{"version":3,"sources":["actions/index.js","Components/AddTodo.js","Components/TodosFilter.js","Components/Footer.js","Components/Todo.js","Components/TodosList.js","App.js","reducers/index.js","reducers/todos.js","reducers/setFilterTodos.js","index.js"],"names":["todoNextId","addTodo","text","type","id","AddTodo","state","inputValue","changeInputHandler","e","setState","target","value","submitHandler","preventDefault","props","dispatch","className","onSubmit","this","onChange","React","Component","connect","TodosFilter","children","active","onClick","disabled","ownProps","filter","filtertodos","Footer","Todo","completed","style","textDecoration","backgroundColor","TodosList","todos","map","todo","getTodosFilter","t","App","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c5ef3b1.chunk.js","sourcesContent":["let todoNextId = 0;\r\n\r\nexport const addTodo = (text) => ({\r\n  type: \"ADD_TODO\",\r\n  id: todoNextId++,\r\n  text,\r\n});\r\n\r\nexport const toggleTodo = (id) => ({\r\n  type: \"TOGGLE_TODO\",\r\n  id,\r\n});\r\n\r\n\r\nexport const filterTodo = filter => ({\r\n  type: 'SET_FILTER_TODO',\r\n  filter,\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions\";\r\n\r\nclass AddTodo extends React.Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  changeInputHandler = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.inputValue !== \"\") {\r\n      this.props.dispatch(addTodo(this.state.inputValue));\r\n    }\r\n    this.setState({\r\n      inputValue: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"form-container\" onSubmit={this.submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.inputValue}\r\n            onChange={this.changeInputHandler}\r\n          />\r\n          <button type=\"submit\">AddTodo</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(AddTodo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterTodo } from \"../actions\";\r\n\r\nclass TodosFilter extends React.Component {\r\n  render() {\r\n    let { children, active, onClick } = this.props;\r\n    return (\r\n      <div>\r\n        <button disabled={active} onClick={onClick}>\r\n          {children}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    active: ownProps.filter === state.filtertodos,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => dispatch(filterTodo(ownProps.filter)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosFilter);\r\n","import React from \"react\";\r\nimport TodosFilter from \"./TodosFilter\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>Show :</p>\r\n      <TodosFilter filter=\"SHOW_ALL\">All</TodosFilter>\r\n      <TodosFilter filter=\"SHOW_ACTIVE\">Active</TodosFilter>\r\n      <TodosFilter filter=\"SHOW_COMPLETED\">Completed</TodosFilter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Todo extends React.Component {\r\n  render() {\r\n    let { text, onClick, completed } = this.props;\r\n    return (\r\n      <li\r\n        className=\"todo\"\r\n        onClick={onClick}\r\n        style={{\r\n          textDecoration: completed ? \"line-through\" : \"none\",\r\n          backgroundColor: completed ? \"#FFB6B6\" : \"#ebfffa\",\r\n        }}\r\n      >\r\n        <p>{text}</p>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Todo);\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleTodo } from \"../actions\";\r\n\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    let { todos } = this.props;\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {todos.map((todo) => {\r\n            return (\r\n              <Todo\r\n                key={todo.id}\r\n                {...todo}\r\n                onClick={() => this.props.dispatch(toggleTodo(todo.id))}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getTodosFilter = (todos, filter) => {\r\n  switch (filter) {\r\n    case \"SHOW_ALL\":\r\n      return todos;\r\n    case \"SHOW_ACTIVE\":\r\n      return todos.filter((t) => !t.completed);\r\n    case \"SHOW_COMPLETED\":\r\n      return todos.filter((t) => t.completed);\r\n    default:\r\n      return todos;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    todos: getTodosFilter(state.todos, state.filtertodos),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodosList);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AddTodo from \"./Components/AddTodo\";\r\nimport Footer from \"./Components/Footer\";\r\nimport TodosList from \"./Components/TodosList\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Footer />\r\n        <AddTodo />\r\n        <TodosList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { todos } from \"./todos\";\r\nimport {filtertodos} from './setFilterTodos'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  filtertodos\r\n});\r\n","export const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false,\r\n        },\r\n      ];\r\n    case \"TOGGLE_TODO\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const filtertodos = (state = \"SHOW_ALL\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_FILTER_TODO\":\r\n      return action.filter;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}